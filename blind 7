class Solution:
    """
    @param: strs: a list of strings
    @return: encodes a list of strings to a single string.
    """

    def encode(self, strs):
        # Initialize an empty result string
        res = ""
        # Iterate through each string in the list
        for s in strs:
            # Append the length of the string, followed by a '#' delimiter, and then the string itself
            res += str(len(s)) + "#" + s
        # Return the encoded string
        return res

    """
    @param: s: A string
    @return: decodes a single string to a list of strings
    """

    def decode(self, s):
        # Initialize an empty list to store the decoded strings
        res, i = [], 0

        # Iterate through the encoded string
        while i < len(s):
            # Find the position of the next '#' delimiter
            j = i
            while s[j] != "#":
                j += 1
            # Extract the length of the next string
            length = int(s[i:j])
            # Extract the string itself using the length
            res.append(s[j + 1 : j + 1 + length])
            # Move the index 'i' to the start of the next encoded string segment
            i = j + 1 + length
        # Return the list of decoded strings
        return res
